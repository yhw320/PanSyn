#!/usr/bin/perl
use Getopt::Long;
my %opts;
GetOptions(\%opts,"node=s","n1=s","n2=s","orth=s","o=s","h|help");
if (!( defined $opts{node} and defined $opts{n1} and defined $opts{n2} and defined $opts{orth} and defined $opts{o})) {
		die "************************************************\n
	-node	Full path to the [node.result] file (generated by Count)
	-n1	Relatively young ancestor node represented by a number (example: 1)
	-n2	Relatively old ancestor node represented by a number (example: 2)
	-orth	Full path to the [Orthogroup_Sequences] file (generated by Orthofinder)
	-o	Full path to the folder storing the output results 
	-h|-help	Print this help page
		*************************************************\n";
}
if (defined $opts{h} or defined $opts{help}) {
		die "************************************************\n
	-node	Full path to the [node.result] file
	-n1	Relatively young ancestor node represented by a number (example: 1)
	-n2	Relatively old ancestor node represented by a number (example: 2)
	-orth	Full path to the [Orthogroup_Sequences] file (generated by Orthofinder)
	-o	Full path to the folder storing the output results 
	-h|-help	Print this help page
		*************************************************\n";
}
system "dos2unix $opts{node}";
system "sed '1d' $opts{node} >$opts{node}-rm";
system "awk -F '\t'  '{for(i=0;++i<=NF;)a[i]=a[i]?a[i] FS \$i:\$i}END{for(i=0;i++<NF;)print a[i]}' $opts{node}-rm > $opts{node}-trans";

open I,"<$opts{node}-trans" or die("Could not open $opts{node}-trans\n"); 

my %h_OG=();my %h1=();my %h2=();

while (my $a=<I>) {
	chomp $a;
	my @it=split/\t/,$a;
	if ($a=~/^#/) {
		foreach my $i (1..$#it) {
			$h_OG{$i}=$it[$i];
		}
	}
	else{
		if ($it[0]==$opts{n1}) {
			foreach my $i (1..$#it) {
				$OG_name=$h_OG{$i};
				$h1{$OG_name}=$it[$i];
			}			
		}
		if ($it[0]==$opts{n2}) {
			foreach my $i (1..$#it) {
				$OG_name=$h_OG{$i};
				$h2{$OG_name}=$it[$i];
			}			
		}
	}
}
close I;
open O1,">$opts{o}/node$opts{n1}-Gain.OG"; 
open O2,">$opts{o}/node$opts{n1}-All.OG"; 
open O3,">$opts{o}/node$opts{n1}-Inherited.OG"; 
foreach my $i (keys %h1) {
	if ($h1{$i}==1 and $h2{$i}==0) {
		print O1 "$i\n";
	}
	if ($h1{$i}==1) {
		print O2 "$i\n";
	}
	if ($h1{$i}==1 and $h2{$i}==1) {
		print O3 "$i\n";
	}
}
close O1;close O2;close O3;
open O4,">$opts{o}/node$opts{n1}-Lose.OG"; 
open O2,">$opts{o}/node$opts{n2}-All.OG"; 
foreach my $i (keys %h2) {
	if ($h2{$i}==1) {
		print O2 "$i\n";
	}
	if ($h2{$i}==1 and $h1{$i}==0) {
		print O4 "$i\n";
	}
}
close O1;close O2;close O4;

open O1,">$opts{o}/node$opts{n1}-All.OG.fa";
open O2,">$opts{o}/node$opts{n1}-OG.genes";
open I,"<$opts{o}/node$opts{n1}-All.OG"; 
while (my $a=<I>) {
	chomp $a;
	open I1,"<$opts{orth}/$a.fa"; 
	while (my $a2=<I1>) {
		chomp $a2;
		print O1 "$a2\n";
		if ($a2=~/^>(\S+)/) {
			print O2 "$a\t$1\n";
		}
	}
	close I1;
}
close O1;
close O2;

open O1,">$opts{o}/node$opts{n2}-All.OG.fa";
open I,"<$opts{o}/node$opts{n2}-All.OG"; 
open O2,">$opts{o}/node$opts{n2}-OG.genes";
while (my $a=<I>) {
	chomp $a;
	open I1,"<$opts{orth}/$a.fa"; 
	while (my $a2=<I1>) {
		chomp $a2;
		print O1 "$a2\n";
		if ($a2=~/^>(\S+)/) {
			print O2 "$a\t$1\n";
		}
	}
	close I1;
}
close O1;
close O2;
