#!/usr/bin/perl
use Getopt::Long;
my %opts;
GetOptions(\%opts,"g=s","r=s","p=s","o=s","h|help");
if (!( defined $opts{g} and defined $opts{r} and defined $opts{p} and defined $opts{o})) {
		die "************************************************\n
	-g	Full path to the folder containing gff data files
	-r	Full path to the folder Results_* (generated by Orthofinder)
	-p	Full path to the folder pSONIC-main (example: /mnt/inspurfs/home/liyl/yuhw/try/pSONIC-main)
	-o	Full path to the folder storing the output results
	-h|-help Print this help page
		*************************************************\n";
}
if (defined $opts{h} or defined $opts{help}) {
		die "************************************************\n
	-g	Full path to the folder containing gff data files
	-r	Full path to the folder Results_* (generated by Orthofinder)
	-p	Full path to the folder pSONIC-main (example: /mnt/inspurfs/home/liyl/yuhw/try/pSONIC-main)
	-o	Full path to the folder storing the output results
	-h|-help Print this help page
		*************************************************\n";
}
#################################################
my $dir1=$opts{g};
open O,">$opts{o}/all.gff";
opendir P,$dir1;
while (my $c=readdir P) {
	if ($c=~/^(\S+).gff$/) {
		$name=$1;
		my $file=$dir1."/$c";
		open I,"<$file" or die("Could not open $file\n"); 
		while (my $a=<I>) {
			chomp $a;
			my @it=split/\t/,$a;
			print O "$name\_$it[0]\t$it[1]\t$it[2]\t$it[3]\n";
		}
		close I;
	}
}
close P;close O;
chdir "$opts{o}";
system "cp $opts{r}/WorkingDirectory/SequenceIDs.txt $opts{o}";
system "cp $opts{r}/WorkingDirectory/SpeciesIDs.txt $opts{o}";
system "cp $opts{r}/WorkingDirectory/Blast* $opts{o}";
system "gunzip *.gz";
system "cat Blast*>data.blast";
system "rm Blast*";
system "cp $opts{r}/Orthogroups/Orthogroups.tsv $opts{o}";

system "python3 $opts{p}/pSONIC.py data translate_gff -gff all.gff";
system "MCScanX data -b 2";
system "python3 $opts{p}/pSONIC.py data";
