#!/usr/bin/perl -w
use strict;
use Getopt::Long;
my %opts;
GetOptions(\%opts,"pansyn=s","o=s","o2=s","orth=s","node=s","tre=s","maxpara=s","spenum1=s","spenum2=s","h|help");
if (!( defined $opts{o} and defined $opts{o2} and defined $opts{orth} and defined $opts{node} and defined $opts{tre} and defined $opts{pansyn})) {
		die "************************************************\n
	-o	Full path to the [outputDir_S30] directory
	-o2	Full path to the [outputDir2_S30] directory
	-orth	Full path to the [orthogroups.txt] file generated by [OrthoFinder] software
	-node	The name of the nodes of interest (e.g. Ancestor1)
	-tre	Full path to the [*.tre] file
	-pansyn Full path the [scripts] provided by PanSyn
	optional:
	-maxpara	OGs containing more paralogs from a single species than specified will be excluded from all downstream analysis (default: 100)
	-spenum1	Minimum number of species in which an OG pair needs to be syntenic to be retained (default: 2)
	-spenum2	Minimum number of species of a phylogenetic clade that must possess a syntenic OG pair (default: 3)
	-h|-help Print this help page
		*************************************************\n";
}
if (defined $opts{h} or defined $opts{help}) {
		die "************************************************\n
	-o	Full path to the [outputDir_S30] directory
	-o2	Full path to the [outputDir2_S30] directory
	-orth	Full path to the [orthogroups.txt] file generated by [OrthoFinder] software
	-node	The name of the nodes of interest (e.g. Ancestor1)
	-tre	Full path to the [*.tre] file
	-pansyn Full path the [scripts] provided by PanSyn
	optional:
	-maxpara	OGs containing more paralogs from a single species than specified will be excluded from all downstream analysis (default: 100)
	-spenum1	Minimum number of species in which an OG pair needs to be syntenic to be retained (default: 2)
	-spenum2	Minimum number of species of a phylogenetic clade that must possess a syntenic OG pair (default: 3)
	-h|-help Print this help page
		*************************************************\n";
}

my $slash; 
####
if ($opts{o2} =~ /(\/)$/) {
    # 存储捕获的结果
    $slash = $1;

    # 删除末尾的 /
    $opts{o2} =~ s/$slash$//;
}
####
####
if ($opts{pansyn} =~ /(\/)$/) {
    # 存储捕获的结果
    $slash = $1;

    # 删除末尾的 /
    $opts{pansyn} =~ s/$slash$//;
}
####

####
if ($opts{o} =~ /(\/)$/) {
    # 存储捕获的结果
    $slash = $1;

    # 删除末尾的 /
    $opts{o} =~ s/$slash$//;
}
####


if (!(defined $opts{maxpara})) {
	$opts{maxpara}=100;
}
if (!(defined $opts{spenum1})) {
	$opts{spenum1}=2;
}
if (!(defined $opts{spenum2})) {
	$opts{spenum2}=3;
}

#chdir "$opts{o2}";
system "perl $opts{pansyn}/orthoFinderToOrthogroup.pl $opts{orth} > $opts{o2}/$opts{node}.clus";
system "python $opts{pansyn}/step1_make_dists.py -c $opts{o2}/$opts{node}.clus \$(ls $opts{o}/gffs/*chrom) -o $opts{o2}/$opts{node}-myresults -m $opts{maxpara} -s $opts{spenum1}";

system "python $opts{pansyn}/step2_filter_pairs.py -d $opts{o2}/$opts{node}-myresults/$opts{node}-myresults.dist -s $opts{tre} -n $opts{node} -m $opts{spenum2} -o $opts{o2}/";

system "mkdir -p $opts{o2}/$opts{node}-myresults/bynode/$opts{node}/m_$opts{spenum2}";
system "mv $opts{o2}/$opts{node}-myresults.m_$opts{spenum2}.$opts{node}.dist $opts{o2}/$opts{node}-myresults/bynode/$opts{node}/m_$opts{spenum2}";
system "python $opts{pansyn}/step2.5_optimal_nmax.py $opts{o2}/$opts{node}-myresults/bynode -o $opts{o2}/$opts{node}-myresults/nmax_test --node_name $opts{node}";


